享元模式：

享元模式，利用共享技术有效的支持大量细粒度的对象。【其实就是通过集合技术对同一类对象只产生一个具体对象】

不需共享享元对象（unsharedflyweight）存在的意义在于对于一些不需要共享的对象进行处理。

内部状态：享元对象内部不会随环境改变而改变的共享部分称为内部状态
外部状态：享元对象内部随环境改变而会改变的部分称为外部状态。对于外部状态可以通过一个外部类在使用时通过一个参数进行传递使用。

只有当有足够细粒度的对象存在时才能考虑使用享元模式，不然由于享元模式存储了所有的对象且将所有外部状态表示为外部类增加了系统的复杂度反而不好。

这里以一个网站开发的例子实现。